{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/WebstormProjects/livinlyon/client/src/components/js/SearchAppartment.js\";\nimport React, { Fragment, useState } from \"react\";\nimport Checkbox from '../../Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst location = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nclass SearchAppartment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillMount = () => {\n      this.selectedCheckboxes = new Set();\n    };\n\n    this.toggleCheckbox = label => {\n      if (this.selectedCheckboxes.has(label)) {\n        this.selectedCheckboxes.delete(label);\n      } else {\n        this.selectedCheckboxes.add(label);\n      }\n    };\n\n    this.handleFormSubmit = formSubmitEvent => {\n      formSubmitEvent.preventDefault();\n\n      for (const checkbox of this.selectedCheckboxes) {\n        console.log(checkbox, 'is selected.');\n      }\n    };\n\n    this.createCheckbox = label => /*#__PURE__*/_jsxDEV(Checkbox, {\n      label: label,\n      handleCheckboxChange: this.toggleCheckbox\n    }, label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n\n    this.createCheckboxes = () => items.map(this.createCheckbox);\n\n    this.handleChange = event => {\n      let name = event.target.name;\n      let value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        rooms,\n        location,\n        appartments\n      } = this.state;\n\n      if (rooms !== null) {\n        try {\n          const response = await fetch(`http://localhost:8000/appartment/search/${rooms}/${location}`);\n          const jsonData = await response.json();\n          this.setState({\n            appartments: jsonData\n          });\n        } catch (err) {\n          console.error(err.message);\n        }\n      } else {\n        try {\n          const response = await fetch(`http://localhost:8000/appartment/search/${location}`);\n          const jsonData = await response.json();\n          this.setState({\n            appartments: jsonData\n          });\n        } catch (err) {\n          console.error(err.message);\n        }\n      }\n    };\n\n    this.handleRender = () => {\n      const {\n        rooms,\n        location\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      appartments: null,\n      rooms: null,\n      location: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    let {\n      appartments\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"text-center mt-5\",\n        children: [location.map(index => {\n          console.log(index);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"scales\",\n              name: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"scales\",\n              children: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), appartments === null ? appartments = '' : appartments.map(index => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: index.owner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: index.rooms\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: index.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SearchAppartment;","map":{"version":3,"sources":["/home/ubuntu/WebstormProjects/livinlyon/client/src/components/js/SearchAppartment.js"],"names":["React","Fragment","useState","Checkbox","location","SearchAppartment","Component","constructor","props","componentWillMount","selectedCheckboxes","Set","toggleCheckbox","label","has","delete","add","handleFormSubmit","formSubmitEvent","preventDefault","checkbox","console","log","createCheckbox","createCheckboxes","items","map","handleChange","event","name","target","value","setState","handleSubmit","rooms","appartments","state","response","fetch","jsonData","json","err","error","message","handleRender","bind","render","index","owner"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from \"react\";\nimport Checkbox from '../../Checkbox';\n\nconst location = [1,2,3,4,5,6,7,8,9];\n\nclass SearchAppartment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            appartments: null,\n            rooms: null,\n            location: null,\n        };\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    componentWillMount = () => {\n        this.selectedCheckboxes = new Set();\n    }\n\n    toggleCheckbox = label => {\n        if (this.selectedCheckboxes.has(label)) {\n            this.selectedCheckboxes.delete(label);\n        } else {\n            this.selectedCheckboxes.add(label);\n        }\n    }\n\n    handleFormSubmit = formSubmitEvent => {\n        formSubmitEvent.preventDefault();\n\n        for (const checkbox of this.selectedCheckboxes) {\n            console.log(checkbox, 'is selected.');\n        }\n    }\n\n    createCheckbox = label => (\n        <Checkbox\n            label={label}\n            handleCheckboxChange={this.toggleCheckbox}\n            key={label}\n        />\n    )\n\n    createCheckboxes = () => (\n        items.map(this.createCheckbox)\n    )\n\n\n\n    handleChange = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n\n\n        this.setState({\n                [name]: value\n            }\n        )\n\n\n\n\n    }\n\n     handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const {rooms, location, appartments} = this.state;\n\n\n        if (rooms !== null) {\n            try {\n\n                const response = await fetch(`http://localhost:8000/appartment/search/${rooms}/${location}`);\n                const jsonData = await response.json();\n\n\n                this.setState({appartments: jsonData})\n\n\n\n\n            } catch (err) {\n                console.error(err.message)\n            }\n\n        } else {\n\n            try {\n\n                const response = await fetch(`http://localhost:8000/appartment/search/${location}`);\n                const jsonData = await response.json();\n\n\n                this.setState({appartments: jsonData})\n\n\n\n\n            } catch (err) {\n                console.error(err.message)\n            }\n\n\n        }\n\n    }\n\n    handleRender = () => {\n        const {rooms, location} = this.state\n        return(\n            <div>\n\n            </div>\n        )\n    }\n\n    render() {\n\n\n        let {appartments} = this.state\n\n        return (\n            <Fragment>\n                <form className=\"text-center mt-5\">\n                    {location.map((index) => {\n                        console.log(index)\n                        return (\n                            <div>\n                                <input type=\"checkbox\" id=\"scales\" name={index}\n                                />\n                                <label htmlFor=\"scales\">{index}</label></div>\n                        )\n\n                    })\n                    }\n\n                       \n\n                    <button className=\"btn btn-success\" >Add</button>\n                </form>\n\n\n                {appartments === null ? appartments = '' : appartments.map((index) => {\n                    return (\n                        <div className=\"text-center mt-5\">\n                            <p>{index.owner}</p>\n                            <p>{index.rooms}</p>\n                            <p>{index.location}</p>\n                        </div>\n\n                    )\n\n                })\n                }\n\n\n            </Fragment>)\n            }\n\n\n\n\n}\n\nexport default SearchAppartment;\n\n"]},"metadata":{},"sourceType":"module"}