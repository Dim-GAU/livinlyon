{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/WebstormProjects/livinlyon/client/src/components/js/SearchAppartment.js\";\nimport React, { Fragment } from \"react\";\nimport Appartment from \"./Appartment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst location = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nclass SearchAppartment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = async event => {\n      const location = this.state.location;\n      const target = event.target;\n      const name = target.name;\n\n      if (target.checked === true) {\n        let appartmentsList = location.slice();\n        appartmentsList.push(name);\n        this.setState({\n          location: appartmentsList\n        });\n      } else if (target.checked === false) {\n        let appartmentsList = location.slice();\n        let index = appartmentsList.indexOf(name);\n        appartmentsList.splice(index, 1);\n        this.setState({\n          location: appartmentsList\n        });\n      }\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        rooms,\n        location,\n        appartments\n      } = this.state;\n\n      if (rooms !== null && location !== null) {\n        try {\n          const response = await fetch(`http://localhost:8000/appartment/search/${rooms}/${location}`);\n          const jsonData = await response.json();\n          this.setState({\n            appartments: jsonData\n          });\n        } catch (err) {\n          console.error(err.message);\n        }\n      } else {\n        try {\n          if (location.length === 9) {\n            let location1 = location[0];\n            let location2 = location[1];\n            let location3 = location[2];\n            let location4 = location[3];\n            let location5 = location[4];\n            let location6 = location[5];\n            let location7 = location[6];\n            let location8 = location[7];\n            let location9 = location[8];\n            const response = await fetch(`http://localhost:8000/appartment/search/${location1}/${location2}/${location3}/${location4}/${location5}/${location6}/${location7}/${location8}/${location9}`);\n            const jsonData = await response.json();\n            this.setState({\n              appartments: jsonData\n            });\n          }\n\n          if (location.length === 8) {\n            let location1 = location[0];\n            let location2 = location[1];\n            let location3 = location[2];\n            let location4 = location[3];\n            let location5 = location[4];\n            let location6 = location[5];\n            let location7 = location[6];\n            let location8 = location[7];\n            const response = await fetch(`http://localhost:8000/appartment/search/${location1}/${location2}/${location3}/${location4}/${location5}/${location6}/${location7}/${location8}`);\n            const jsonData = await response.json();\n            this.setState({\n              appartments: jsonData\n            });\n          }\n\n          if (location.length === 7) {\n            console.log(location);\n            let location1 = location[0];\n            let location2 = location[1];\n            let location3 = location[2];\n            let location4 = location[3];\n            let location5 = location[4];\n            let location6 = location[5];\n            let location7 = location[6];\n            const response = await fetch(`http://localhost:8000/appartment/search/${location1}/${location2}/${location3}/${location4}/${location5}/${location6}/${location7}`);\n            const jsonData = await response.json();\n            this.setState({\n              appartments: jsonData\n            });\n          }\n\n          if (location.length === 6) {\n            let location1 = location[0];\n            let location2 = location[1];\n            let location3 = location[2];\n            let location4 = location[3];\n            let location5 = location[4];\n            let location6 = location[5];\n            const response = await fetch(`http://localhost:8000/appartment/search/${location1}/${location2}/${location3}/${location4}/${location5}/${location6}`);\n            const jsonData = await response.json();\n            this.setState({\n              appartments: jsonData\n            });\n          }\n\n          if (location.length === 5) {\n            let location1 = location[0];\n            let location2 = location[1];\n            let location3 = location[2];\n            let location4 = location[3];\n            let location5 = location[4];\n            const response = await fetch(`http://localhost:8000/appartment/search/${location1}/${location2}/${location3}/${location4}/${location5}`);\n            const jsonData = await response.json();\n            this.setState({\n              appartments: jsonData\n            });\n          }\n\n          if (location.length === 4) {\n            let location1 = location[0];\n            let location2 = location[1];\n            let location3 = location[2];\n            let location4 = location[3];\n            const response = await fetch(`http://localhost:8000/appartment/search/${location1}/${location2}/${location3}/${location4}`);\n            const jsonData = await response.json();\n            this.setState({\n              appartments: jsonData\n            });\n          }\n\n          if (location.length === 3) {\n            let location1 = location[0];\n            let location2 = location[1];\n            let location3 = location[2];\n            const response = await fetch(`http://localhost:8000/appartment/search/${location1}/${location2}/${location3}`);\n            const jsonData = await response.json();\n            this.setState({\n              appartments: jsonData\n            });\n          }\n\n          if (location.length === 2) {\n            let location1 = location[0];\n            let location2 = location[1];\n            const response = await fetch(`http://localhost:8000/appartment/search/${location1}/${location2}`);\n            const jsonData = await response.json();\n            this.setState({\n              appartments: jsonData\n            });\n          }\n\n          if (location.length === 1) {\n            let location1 = location[0];\n            const response = await fetch(`http://localhost:8000/appartment/search/${location1}`);\n            const jsonData = await response.json();\n            this.setState({\n              appartments: jsonData\n            });\n          }\n        } catch (err) {\n          console.error(err.message);\n        }\n      }\n    };\n\n    this.handleChange = event => {\n      let name = event.target.name;\n      let value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleRender = () => {\n      const {\n        rooms,\n        location\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      isGoing: true,\n      appartments: null,\n      rooms: null,\n      location: []\n    };\n  }\n\n  render() {\n    let {\n      appartments\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select one or more locations:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"text-center mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"locations\",\n          children: location.map(index => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"scales\",\n                name: index,\n                onChange: this.handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"scales\",\n                children: index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: this.handleSubmit,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), appartments === null ? appartments = '' : appartments.map(index => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result\",\n          children: /*#__PURE__*/_jsxDEV(Appartment, {\n            appartment: index\n          }, index.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SearchAppartment;","map":{"version":3,"sources":["/home/ubuntu/WebstormProjects/livinlyon/client/src/components/js/SearchAppartment.js"],"names":["React","Fragment","Appartment","location","SearchAppartment","Component","constructor","props","handleInputChange","event","state","target","name","checked","appartmentsList","slice","push","setState","index","indexOf","splice","handleSubmit","preventDefault","rooms","appartments","response","fetch","jsonData","json","err","console","error","message","length","location1","location2","location3","location4","location5","location6","location7","location8","location9","log","handleChange","value","handleRender","isGoing","render","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,MAAMC,QAAQ,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,CAAjB;;AAEA,MAAMC,gBAAN,SAA+BJ,KAAK,CAACK,SAArC,CAA+C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,iBAZmB,GAYC,MAAOC,KAAP,IAAiB;AACjC,YAAMN,QAAQ,GAAG,KAAKO,KAAL,CAAWP,QAA5B;AACA,YAAMQ,MAAM,GAAGF,KAAK,CAACE,MAArB;AAEA,YAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;;AAEA,UAAID,MAAM,CAACE,OAAP,KAAmB,IAAvB,EAA6B;AACzB,YAAIC,eAAe,GAAGX,QAAQ,CAACY,KAAT,EAAtB;AACAD,QAAAA,eAAe,CAACE,IAAhB,CAAqBJ,IAArB;AACA,aAAKK,QAAL,CAAc;AAACd,UAAAA,QAAQ,EAAEW;AAAX,SAAd;AAEH,OALD,MAKO,IAAIH,MAAM,CAACE,OAAP,KAAmB,KAAvB,EAA8B;AACjC,YAAIC,eAAe,GAAGX,QAAQ,CAACY,KAAT,EAAtB;AACA,YAAIG,KAAK,GAAGJ,eAAe,CAACK,OAAhB,CAAwBP,IAAxB,CAAZ;AACAE,QAAAA,eAAe,CAACM,MAAhB,CAAuBF,KAAvB,EAA8B,CAA9B;AACA,aAAKD,QAAL,CAAc;AAACd,UAAAA,QAAQ,EAAEW;AAAX,SAAd;AAGH;AAGJ,KAjCkB;;AAAA,SAmCnBO,YAnCmB,GAmCJ,MAAOZ,KAAP,IAAiB;AAC5BA,MAAAA,KAAK,CAACa,cAAN;AAGA,YAAM;AAACC,QAAAA,KAAD;AAAQpB,QAAAA,QAAR;AAAkBqB,QAAAA;AAAlB,UAAiC,KAAKd,KAA5C;;AAGA,UAAIa,KAAK,KAAK,IAAV,IAAkBpB,QAAQ,KAAK,IAAnC,EAAyC;AACrC,YAAI;AAEA,gBAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0CH,KAAM,IAAGpB,QAAS,EAA9D,CAA5B;AACA,gBAAMwB,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAGA,eAAKX,QAAL,CAAc;AAACO,YAAAA,WAAW,EAAEG;AAAd,WAAd;AAKH,SAXD,CAWE,OAAOE,GAAP,EAAY;AACVC,UAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AAEJ,OAhBD,MAgBO;AAEH,YAAI;AAIA,cAAI7B,QAAQ,CAAC8B,MAAT,KAAoB,CAAxB,EAA2B;AACvB,gBAAIC,SAAS,GAAG/B,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIgC,SAAS,GAAGhC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIiC,SAAS,GAAGjC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIkC,SAAS,GAAGlC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAImC,SAAS,GAAGnC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIoC,SAAS,GAAGpC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIqC,SAAS,GAAGrC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIsC,SAAS,GAAGtC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIuC,SAAS,GAAGvC,QAAQ,CAAC,CAAD,CAAxB;AACA,kBAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0CQ,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,EAA9J,CAA5B;AACA,kBAAMf,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACA,iBAAKX,QAAL,CAAc;AAACO,cAAAA,WAAW,EAAEG;AAAd,aAAd;AAEH;;AAED,cAAIxB,QAAQ,CAAC8B,MAAT,KAAoB,CAAxB,EAA2B;AACvB,gBAAIC,SAAS,GAAG/B,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIgC,SAAS,GAAGhC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIiC,SAAS,GAAGjC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIkC,SAAS,GAAGlC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAImC,SAAS,GAAGnC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIoC,SAAS,GAAGpC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIqC,SAAS,GAAGrC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIsC,SAAS,GAAGtC,QAAQ,CAAC,CAAD,CAAxB;AAEA,kBAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0CQ,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,EAAjJ,CAA5B;AACA,kBAAMd,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACA,iBAAKX,QAAL,CAAc;AAACO,cAAAA,WAAW,EAAEG;AAAd,aAAd;AAEH;;AAED,cAAIxB,QAAQ,CAAC8B,MAAT,KAAoB,CAAxB,EAA2B;AACvBH,YAAAA,OAAO,CAACa,GAAR,CAAYxC,QAAZ;AACA,gBAAI+B,SAAS,GAAG/B,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIgC,SAAS,GAAGhC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIiC,SAAS,GAAGjC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIkC,SAAS,GAAGlC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAImC,SAAS,GAAGnC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIoC,SAAS,GAAGpC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIqC,SAAS,GAAGrC,QAAQ,CAAC,CAAD,CAAxB;AAEA,kBAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0CQ,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,EAApI,CAA5B;AACA,kBAAMb,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACA,iBAAKX,QAAL,CAAc;AAACO,cAAAA,WAAW,EAAEG;AAAd,aAAd;AAEH;;AAED,cAAIxB,QAAQ,CAAC8B,MAAT,KAAoB,CAAxB,EAA2B;AACvB,gBAAIC,SAAS,GAAG/B,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIgC,SAAS,GAAGhC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIiC,SAAS,GAAGjC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIkC,SAAS,GAAGlC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAImC,SAAS,GAAGnC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIoC,SAAS,GAAGpC,QAAQ,CAAC,CAAD,CAAxB;AAEA,kBAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0CQ,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,EAAvH,CAA5B;AACA,kBAAMZ,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACA,iBAAKX,QAAL,CAAc;AAACO,cAAAA,WAAW,EAAEG;AAAd,aAAd;AAEH;;AAED,cAAIxB,QAAQ,CAAC8B,MAAT,KAAoB,CAAxB,EAA2B;AACvB,gBAAIC,SAAS,GAAG/B,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIgC,SAAS,GAAGhC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIiC,SAAS,GAAGjC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIkC,SAAS,GAAGlC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAImC,SAAS,GAAGnC,QAAQ,CAAC,CAAD,CAAxB;AAEA,kBAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0CQ,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,EAA1G,CAA5B;AACA,kBAAMX,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACA,iBAAKX,QAAL,CAAc;AAACO,cAAAA,WAAW,EAAEG;AAAd,aAAd;AAEH;;AAED,cAAIxB,QAAQ,CAAC8B,MAAT,KAAoB,CAAxB,EAA2B;AACvB,gBAAIC,SAAS,GAAG/B,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIgC,SAAS,GAAGhC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIiC,SAAS,GAAGjC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIkC,SAAS,GAAGlC,QAAQ,CAAC,CAAD,CAAxB;AAEA,kBAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0CQ,SAAU,IAAGC,SAAU,IAAGC,SAAU,IAAGC,SAAU,EAA7F,CAA5B;AACA,kBAAMV,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACA,iBAAKX,QAAL,CAAc;AAACO,cAAAA,WAAW,EAAEG;AAAd,aAAd;AAEH;;AAED,cAAIxB,QAAQ,CAAC8B,MAAT,KAAoB,CAAxB,EAA2B;AACvB,gBAAIC,SAAS,GAAG/B,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIgC,SAAS,GAAGhC,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIiC,SAAS,GAAGjC,QAAQ,CAAC,CAAD,CAAxB;AAEA,kBAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0CQ,SAAU,IAAGC,SAAU,IAAGC,SAAU,EAAhF,CAA5B;AACA,kBAAMT,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACA,iBAAKX,QAAL,CAAc;AAACO,cAAAA,WAAW,EAAEG;AAAd,aAAd;AAEH;;AAED,cAAIxB,QAAQ,CAAC8B,MAAT,KAAoB,CAAxB,EAA2B;AACvB,gBAAIC,SAAS,GAAG/B,QAAQ,CAAC,CAAD,CAAxB;AACA,gBAAIgC,SAAS,GAAGhC,QAAQ,CAAC,CAAD,CAAxB;AAEA,kBAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0CQ,SAAU,IAAGC,SAAU,EAAnE,CAA5B;AACA,kBAAMR,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACA,iBAAKX,QAAL,CAAc;AAACO,cAAAA,WAAW,EAAEG;AAAd,aAAd;AAEH;;AAED,cAAIxB,QAAQ,CAAC8B,MAAT,KAAoB,CAAxB,EAA2B;AACvB,gBAAIC,SAAS,GAAG/B,QAAQ,CAAC,CAAD,CAAxB;AAEA,kBAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0CQ,SAAU,EAAtD,CAA5B;AACA,kBAAMP,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACA,iBAAKX,QAAL,CAAc;AAACO,cAAAA,WAAW,EAAEG;AAAd,aAAd;AAEH;AAKJ,SA5HD,CA4HE,OAAOE,GAAP,EAAY;AACVC,UAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AAGJ;AAGJ,KAhMkB;;AAAA,SAoMnBY,YApMmB,GAoMHnC,KAAD,IAAW;AACtB,UAAIG,IAAI,GAAGH,KAAK,CAACE,MAAN,CAAaC,IAAxB;AACA,UAAIiC,KAAK,GAAGpC,KAAK,CAACE,MAAN,CAAakC,KAAzB;AAGA,WAAK5B,QAAL,CAAc;AACN,SAACL,IAAD,GAAQiC;AADF,OAAd;AAQH,KAjNkB;;AAAA,SAqNnBC,YArNmB,GAqNJ,MAAM;AACjB,YAAM;AAACvB,QAAAA,KAAD;AAAQpB,QAAAA;AAAR,UAAoB,KAAKO,KAA/B;AACA,0BACI;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KA5NkB;;AAEf,SAAKA,KAAL,GAAa;AACTqC,MAAAA,OAAO,EAAE,IADA;AAETvB,MAAAA,WAAW,EAAE,IAFJ;AAGTD,MAAAA,KAAK,EAAE,IAHE;AAITpB,MAAAA,QAAQ,EAAE;AAJD,KAAb;AAQH;;AAoND6C,EAAAA,MAAM,GAAG;AAGL,QAAI;AAACxB,MAAAA;AAAD,QAAgB,KAAKd,KAAzB;AAEA,wBACI,QAAC,QAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBACCP,QAAQ,CAAC8C,GAAT,CAAc/B,KAAD,IAAW;AAErB,gCACI;AAAA,sCACI;AAAO,gBAAA,IAAI,EAAC,UAAZ;AAAuB,gBAAA,EAAE,EAAC,QAA1B;AAAmC,gBAAA,IAAI,EAAEA,KAAzC;AAAgD,gBAAA,QAAQ,EAAE,KAAKV;AAA/D;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,gBAAA,OAAO,EAAC,QAAf;AAAA,0BAAyBU;AAAzB;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAMH,WARA;AADD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAgBI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAE,KAAKG,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAsBKG,WAAW,KAAK,IAAhB,GAAuBA,WAAW,GAAG,EAArC,GAA0CA,WAAW,CAACyB,GAAZ,CAAiB/B,KAAD,IAAW;AAClE,4BACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACI,QAAC,UAAD;AAA2B,YAAA,UAAU,EAAEA;AAAvC,aAAiBA,KAAK,CAACgC,EAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OAR0C,CAtB/C;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoCK;;AAxQkC;;AAiR/C,eAAe9C,gBAAf","sourcesContent":["import React, {Fragment} from \"react\";\nimport Appartment from \"./Appartment\";\n\n\nconst location = [1,2,3,4,5,6,7,8,9];\n\nclass SearchAppartment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isGoing: true,\n            appartments: null,\n            rooms: null,\n            location: [],\n\n        };\n\n    }\n\n    handleInputChange = async (event) => {\n        const location = this.state.location;\n        const target = event.target;\n\n        const name = target.name;\n\n        if (target.checked === true) {\n            let appartmentsList = location.slice();\n            appartmentsList.push(name);\n            this.setState({location: appartmentsList})\n\n        } else if (target.checked === false) {\n            let appartmentsList = location.slice();\n            let index = appartmentsList.indexOf(name);\n            appartmentsList.splice(index, 1);\n            this.setState({location: appartmentsList})\n\n\n        }\n\n\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n\n\n        const {rooms, location, appartments} = this.state;\n\n\n        if (rooms !== null && location !== null) {\n            try {\n\n                const response = await fetch(`http://localhost:8000/appartment/search/${rooms}/${location}`);\n                const jsonData = await response.json();\n\n\n                this.setState({appartments: jsonData})\n\n\n\n\n            } catch (err) {\n                console.error(err.message)\n            }\n\n        } else {\n\n            try {\n\n\n\n                if (location.length === 9) {\n                    let location1 = location[0];\n                    let location2 = location[1];\n                    let location3 = location[2];\n                    let location4 = location[3];\n                    let location5 = location[4];\n                    let location6 = location[5];\n                    let location7 = location[6];\n                    let location8 = location[7];\n                    let location9 = location[8];\n                    const response = await fetch(`http://localhost:8000/appartment/search/${location1}/${location2}/${location3}/${location4}/${location5}/${location6}/${location7}/${location8}/${location9}`);\n                    const jsonData = await response.json();\n                    this.setState({appartments: jsonData})\n\n                }\n\n                if (location.length === 8) {\n                    let location1 = location[0];\n                    let location2 = location[1];\n                    let location3 = location[2];\n                    let location4 = location[3];\n                    let location5 = location[4];\n                    let location6 = location[5];\n                    let location7 = location[6];\n                    let location8 = location[7];\n\n                    const response = await fetch(`http://localhost:8000/appartment/search/${location1}/${location2}/${location3}/${location4}/${location5}/${location6}/${location7}/${location8}`);\n                    const jsonData = await response.json();\n                    this.setState({appartments: jsonData})\n\n                }\n\n                if (location.length === 7) {\n                    console.log(location)\n                    let location1 = location[0];\n                    let location2 = location[1];\n                    let location3 = location[2];\n                    let location4 = location[3];\n                    let location5 = location[4];\n                    let location6 = location[5];\n                    let location7 = location[6];\n\n                    const response = await fetch(`http://localhost:8000/appartment/search/${location1}/${location2}/${location3}/${location4}/${location5}/${location6}/${location7}`);\n                    const jsonData = await response.json();\n                    this.setState({appartments: jsonData})\n\n                }\n\n                if (location.length === 6) {\n                    let location1 = location[0];\n                    let location2 = location[1];\n                    let location3 = location[2];\n                    let location4 = location[3];\n                    let location5 = location[4];\n                    let location6 = location[5];\n\n                    const response = await fetch(`http://localhost:8000/appartment/search/${location1}/${location2}/${location3}/${location4}/${location5}/${location6}`);\n                    const jsonData = await response.json();\n                    this.setState({appartments: jsonData})\n\n                }\n\n                if (location.length === 5) {\n                    let location1 = location[0];\n                    let location2 = location[1];\n                    let location3 = location[2];\n                    let location4 = location[3];\n                    let location5 = location[4];\n\n                    const response = await fetch(`http://localhost:8000/appartment/search/${location1}/${location2}/${location3}/${location4}/${location5}`);\n                    const jsonData = await response.json();\n                    this.setState({appartments: jsonData})\n\n                }\n\n                if (location.length === 4) {\n                    let location1 = location[0];\n                    let location2 = location[1];\n                    let location3 = location[2];\n                    let location4 = location[3];\n\n                    const response = await fetch(`http://localhost:8000/appartment/search/${location1}/${location2}/${location3}/${location4}`);\n                    const jsonData = await response.json();\n                    this.setState({appartments: jsonData})\n\n                }\n\n                if (location.length === 3) {\n                    let location1 = location[0];\n                    let location2 = location[1];\n                    let location3 = location[2];\n\n                    const response = await fetch(`http://localhost:8000/appartment/search/${location1}/${location2}/${location3}`);\n                    const jsonData = await response.json();\n                    this.setState({appartments: jsonData})\n\n                }\n\n                if (location.length === 2) {\n                    let location1 = location[0];\n                    let location2 = location[1];\n\n                    const response = await fetch(`http://localhost:8000/appartment/search/${location1}/${location2}`);\n                    const jsonData = await response.json();\n                    this.setState({appartments: jsonData})\n\n                }\n\n                if (location.length === 1) {\n                    let location1 = location[0];\n\n                    const response = await fetch(`http://localhost:8000/appartment/search/${location1}`);\n                    const jsonData = await response.json();\n                    this.setState({appartments: jsonData})\n\n                }\n\n\n\n\n            } catch (err) {\n                console.error(err.message)\n            }\n\n\n        }\n\n\n    }\n\n\n\n    handleChange = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n\n\n        this.setState({\n                [name]: value\n            }\n        )\n\n\n\n\n    }\n\n\n\n    handleRender = () => {\n        const {rooms, location} = this.state\n        return(\n            <div>\n\n            </div>\n        )\n    }\n\n    render() {\n\n\n        let {appartments} = this.state\n\n        return (\n            <Fragment>\n                <p>Select one or more locations:</p>\n                <form className=\"text-center mt-5\">\n                    <div className=\"locations\">\n                    {location.map((index) => {\n\n                        return (\n                            <div>\n                                <input type=\"checkbox\" id=\"scales\" name={index} onChange={this.handleInputChange} />\n                                <label htmlFor=\"scales\">{index}</label></div>\n                        )\n\n                    })\n                    }\n                    </div>\n\n\n\n                    <button className=\"btn btn-success\" onClick={this.handleSubmit} >Search</button>\n                </form>\n\n\n                {appartments === null ? appartments = '' : appartments.map((index) => {\n                    return (\n                        <div className=\"result\">\n                            <Appartment key={index.id} appartment={index} />\n                        </div>\n\n                    )\n\n                })\n                }\n\n\n            </Fragment>)\n            }\n\n\n\n\n\n\n}\n\nexport default SearchAppartment;\n\n"]},"metadata":{},"sourceType":"module"}